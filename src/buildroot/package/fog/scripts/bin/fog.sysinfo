#!/bin/bash
. /usr/share/fog/lib/funcs.sh
. /bin/fog.donate
for arg in $(cat /proc/cmdline); do
    case $arg in
        initsh)
            ash -i
            ;;
    esac
done
clearScreen
displayBanner
mac=$(getMACAddresses)
oPS3=$PS3
PS3="Please enter your choice: "
choices="Network Information\nPartition Information\nCheck FOG Compatibility\nPing a Host\nDisplay MAC Address\nShow DMI Information"
[[ -n $isdebug || $mode == +(*debug*) ]] && choices="Quit\n$choices" || choices="Reboot\n$choices"
oIFS=$IFS
IFS=$'\n'
choices=$(echo -e $choices)
wait_enter() {
    echo -e "\n\n\n"
    display_center "Press [Enter] to continue"
    read -s tmp
    echo -e "\n\n\n"
}
while :; do
    echo -e "\n\n\n"
    select choice in $choices; do
        case $REPLY in
            1)
                [[ -n $isdebug || $mode == +(*debug*) ]] && exit 0 || reboot -f
                ;;
            2)
                clearScreen
                display_center "==================================================="
                display_center "=                Network Information              ="
                display_center "==================================================="
                echo
                ip addr 2>/dev/null
                echo
                display_center "==================================================="
                display_center "=                  DNS Information                ="
                display_center "==================================================="
                echo
                cat /etc/resolv.conf 2>/dev/null
                wait_enter
                ;;
            3)
                clearScreen
                display_center "==================================================="
                display_center "=             Partition Information               ="
                display_center "==================================================="
                echo
                parted --list 2>/dev/null
                wait_enter
                ;;
            4)
                clearScreen
                display_center "==================================================="
                display_center "=              FOG Compatibility Test             ="
                display_center "==================================================="
                echo
                tmpDisk=$(parted --list 2>/dev/null | grep "Disk")
                tmpNic=$(ip addr | grep "link/ether")
                [[ -n $tmpDisk ]] && blHddOk="Pass" || blHddOk="Fail"
                [[ -n $tmpNic ]] && blNicOk="Pass" || blNicOk="Fail"
                [[ $blNicOk == Pass && $blHddOk == Pass ]] && tmpstr="Computer appears to be compatible with FOG!" || tmpstr="Computer is NOT compatibile with FOG!"
                display_center "$tmpstr"
                display_center "==================================================="
                display_center "=                      Results                    ="
                display_center "==================================================="
                display_center "= Network..................................[$blNicOk] ="
                display_center "= Disk.....................................[$blHddOk] ="
                display_center "==================================================="
                echo
                if [[ $blNicOk == Fail || $blHddOk == Fail ]]; then
                    display_center "###################################################"
                    display_center "# Try using a newer kernel that may be compatible #"
                    display_center "# with this device.                               #"
                    display_center "#                                                 #"
                    display_center "# New kernels can be downloaded from the GUI.     #"
                    display_center "# From the menu select:                           #"
                    display_center "# FOG Configuration->                             #"
                    display_center "#     Kernel Update                               #"
                    display_center "###################################################"
                fi
                wait_enter
                ;;
            5)
                clearScreen
                display_center "==================================================="
                display_center "=                   Ping a Host                   ="
                display_center "==================================================="
                regex='(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'
                while [[ -z $phost ]]; do
                    echo -n " Enter host to ping: "
                    read phost
                    phost=$(echo $phost)
                    if [[ -z $phost || $phost =~ $regex ]]; then
                        phost=""
                        echo "Invalid Entry, try again"
                    fi
                done
                echo
                ping -c 4 $phost
                unset phost
                wait_enter
                ;;
            6)
                clearScreen
                display_center "==================================================="
                display_center "=               System MAC Address'               ="
                display_center "==================================================="
                echo
                display_center $mac
                echo
                wait_enter
                ;;
            7)
                clearScreen
                test="bios-vendor bios-version bios-release-date system-manufacturer system-product-name system-version system-serial-number system-uuid baseboard-manufacturer baseboard-product-name baseboard-version baseboard-serial-number baseboard-asset-tag chassis-manufacturer chassis-type chassis-version chassis-serial-number chassis-asset-tag processor-family processor-manufacturer processor-version processor-frequency"
                i=0
                IFS=$oIFS
                for t in $test; do
                    str="DMI String: $t\n"
                    v=$(dmidecode --string $t)
                    echo -e "$str   $v\n\n"
                    let i+=1
                    if [[ $i == 5 ]]; then
                        display_center " * Press [Enter] to Proceed"
                        read tmp
                        i=0
                    fi
                done
                IFS=$'\n'
                wait_enter
                ;;
            *)
                echo "Invalid entry, try again"
                wait_enter
                ;;
        esac
        break
    done
done
IFS=$oIFS
