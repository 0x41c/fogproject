#!/bin/bash
. /usr/share/fog/lib/funcs.sh
. /bin/fog.donate
. /bin/fog.checkin
clearScreen
displayBanner
dots "Mounting Clamav"
if [[ ! -d /opt/fog/clamav ]]; then
    mkdir -p /opt/fog/clamav
fi
mount -o nolock,proto=tcp,rsize=32768,wsize=32768,intr,noatime $clamav /opt/fog/clamav
echo "Done"
debugPause
dots "Adding clamav to path"
if [[ -d /opt/fog/clamav/bin && -d /opt/fog/clamav/sbin ]]; then
    export PATH=$PATH:/opt/fog/clamav/bin:/opt/fog/clamav/sbin
else
    echo "Failed"
    debugPause
    handleError "Cannot find clamav binaries to run task."
fi
echo "Done"
debugPause
dots "Updating clamav"
freshclam >/dev/null 2>&1
if [[ $? != 0 ]]; then
    echo "Failed"
    debugPause
    handleError "Unable to update clamav definitions"
fi
echo "Done"
debugPause
dots "Getting disks to scan"
getHardDisk 'true'
if [[ -z $disks ]]; then
    echo "Failed"
    debugPause
    handleError "Unable to find any disks"
fi
echo "Done"
debugPause
dots "Creating scan partition"
if [[ ! -d /clamavscan ]]; then
    mkdir -p /clamavscan
fi
if [[ ! -d /clamavscan ]]; then
    echo "Failed"
    debugPause
    handleError "Unable to create scan folder"
fi
echo "Done"
debugPause
action=""
case $avmode in
    [Ss])
        modename="Scan and Report"
        ;;
    [Qq])
        action="--move=/clamavscan/fog/infected"
        modename="Scan and Quarantine"
        ;;
    *)
        handleError "Unable to determine scanning mode!"
        ;;
esac
for disk in $disks; do
    dots "Using disk"
    echo $disk
    debugPause
    getPartitions $disk
    for part in $parts; do
        fstype=$(fsTypeSetting $part)
        case $fstype in
            [Nn][Tt][Ff][Ss])
                echo " * Mounting partition $part"
                ntfs-3g -o force,rw $part /clamavscan &> /tmp/clamavscan-mount-output
                ;;
            [Ee][Xx][Tt][Ff][Ss])
                echo " * Mounting partition $part"
                mount -o rw $part /clamavscan &> /tmp/clamavscan-mount-output
                ;;
            *)
                dots "Not scanning partition"
                echo "$part"
                debugPause
                continue
                ;;
        esac
        if [[ ! $? -eq 0 ]]; then
            echo " * Failed to mount $part"
            debugPause
            continue
        fi
        debugPause
        dots "Creating working directories"
        mkdir -p /clamavscan/fog/{tmp,infected,log}
        if [[ ! $? -eq 0 ]]; then
            echo "Failed"
            debugPause
            umount /clamavscan >/dev/null 2>&1
            continue
        fi
        echo -n > /clamavscan/fog/log/log.txt
        echo "Done"
        debugPause
        echo " * Scanning Partition $part"
        debugPause
        dots "Clam AV Mode"
        echo $modename
        debugPause
        echo
        dots "Starting AV scan"
        echo -e -n "\t"
        clamscan -V >/dev/null 2&>1
        if [[ ! $? -eq 0 ]]; then
            echo "Failed"
            debugPause
            umount /clamavscan >/dev/null 2>&1
            continue
        fi
        echo "Done"
        debugPause
        cd /clamavscan
        dots "Scanning"
        start=$(date +%s)
        clamscan -r --tempdir=/clamavscan/fog/tmp $action --log=/clamavscan/fog/log/log.txt --no-summary --exclude-dir=/clamavscan/fog/*
        if [[ ! $? -eq 0 ]]; then
            echo "Failed"
            debugPause
            umount /clamavscan
            cur=$(date +%s)
            diff=$((cur - start))
            echo
            display_center "Clam AV failed"
            display_center "This may be due to a problem with the virus database files"
            display_center "Trying with the next partition"
            debugPause
            continue
        fi
        echo
        echo " * Scan complete, processing log file"
        debugPause
        output=$(cat /clamavscan/fog/log/log.txt | grep 'FOUND')
        oIFS=$IFS
        IFS="
"
        cd /tmp
        cnt=0
        for line in $output; do
            b64=$(echo $line | base64)
            cnt=$(($cnt+1))
            echo " * File id: $cnt"
            dots "Sending file id"
            wget --post-data="mac=$mac&string=$b64&mode=$avmode" -qO /tmp/avstat http://${web}service/av.php >/dev/null 2>&1
            if [[ ! $? -eq 0 ]]; then
                echo "Failed"
                debugPause
                continue
            fi
            echo "Done"
            debugPause
            cat /tmp/avstat
            echo
            cat /dev/null > /tmp/avstat
        done
        IFS=$oIFS
        umount /clamavscan >/dev/null 2>&1
    done
done
. /bin/fog.nonimgcomplete
